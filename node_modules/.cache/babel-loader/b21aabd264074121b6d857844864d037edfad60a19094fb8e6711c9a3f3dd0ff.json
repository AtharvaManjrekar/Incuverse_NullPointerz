{"ast":null,"code":"var _jsxFileName = \"D:\\\\CollegeFolder_B-TECH\\\\Incuverse\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebaseConfig';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { checkUserExists } from '../pages/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      if (firebaseUser) {\n        setUser(firebaseUser);\n\n        // Fetch user data from database (non-blocking)\n        const fetchUserData = async () => {\n          try {\n            const userCheck = await checkUserExists(firebaseUser.email);\n            if (userCheck.success && userCheck.exists) {\n              setUserData(userCheck.user);\n            }\n          } catch (error) {\n            console.error('Error fetching user data:', error);\n          }\n        };\n        fetchUserData(); // Run in background\n      } else {\n        setUser(null);\n        setUserData(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const value = {\n    user,\n    userData,\n    loading,\n    setUser,\n    setUserData\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"4Lvrj5jq4weTYzI57B4yrS0C4B0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","onAuthStateChanged","checkUserExists","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","userData","setUserData","loading","setLoading","unsubscribe","firebaseUser","fetchUserData","userCheck","email","success","exists","error","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CollegeFolder_B-TECH/Incuverse/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebaseConfig';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { checkUserExists } from '../pages/firestore';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        setUser(firebaseUser);\r\n\r\n        // Fetch user data from database (non-blocking)\r\n        const fetchUserData = async () => {\r\n          try {\r\n            const userCheck = await checkUserExists(firebaseUser.email);\r\n            if (userCheck.success && userCheck.exists) {\r\n              setUserData(userCheck.user);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching user data:', error);\r\n          }\r\n        };\r\n        fetchUserData(); // Run in background\r\n      } else {\r\n        setUser(null);\r\n        setUserData(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    userData,\r\n    loading,\r\n    setUser,\r\n    setUserData\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGX,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAGlB,kBAAkB,CAACD,IAAI,EAAE,MAAOoB,YAAY,IAAK;MACnE,IAAIA,YAAY,EAAE;QAChBN,OAAO,CAACM,YAAY,CAAC;;QAErB;QACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;UAChC,IAAI;YACF,MAAMC,SAAS,GAAG,MAAMpB,eAAe,CAACkB,YAAY,CAACG,KAAK,CAAC;YAC3D,IAAID,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACG,MAAM,EAAE;cACzCT,WAAW,CAACM,SAAS,CAACT,IAAI,CAAC;YAC7B;UACF,CAAC,CAAC,OAAOa,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACnD;QACF,CAAC;QACDL,aAAa,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACLP,OAAO,CAAC,IAAI,CAAC;QACbE,WAAW,CAAC,IAAI,CAAC;MACnB;MACAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG;IACZf,IAAI;IACJE,QAAQ;IACRE,OAAO;IACPH,OAAO;IACPE;EACF,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAChCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,GAAA,CA7CWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}